

camelize
	"Generator.camelize(" In ".toString())"
getMethodName
	"get" Name ""
getVariableFromName
	"MainClass." VariableName ""
newBody
	"new ExternalStatement.Body(" Body Elements ")"
manipulateObject
	"" Class Name "." Method "(" Parameter ");"

manipulateSoloToken
	"for(final IToken " Element Name ":" Subject ".getAllSafely(\"" Token Name "\")) {" Body ""
manipulateMultiToken
	"for(IToken.Key __" Element Name "__KEY:" Subject ".keySet()) {" Body ""
manipulateOneMultiToken
	"if(__" Element Name"__KEY.getName().equals(\"" Token Name"\")){ final IToken " Element Name " = " Subject ".get(__" Element Name "__KEY);" Body ""


bodyEntry
	"" Entry ""
bodyOperator
	"" Left " " Operator " " Right ""
bodyCallWithSubject
	"" Subject "." Method "(" Parameters ")"
bodyCallWithoutSubject
	"" Method "(" Parameters ")"
bodyAccessWithSubject
	"" Subject "." Method ""
bodyAccessWithoutSubject
	"" Method ""
bodyName
	"" Name ""
bodyNameWithParameters
	"" Name "<" Parameters ">"
bodyNewObj
	"new " Method Name "(" Parameters ")"
bodyConditional
	"" Name "(" Header ") {" Body ""
bodyConditionalWithoutHeader
	"" Name " {" Body ""
bodyElement
	"" Prefix "" Entry "" Suffix ""
declareVariableWithAssignmentFinal
	"final " Type " " Name " = " Assignment ""
declareVariableWithAssignmentNonFinal
	"" Type " " Name " = " Assignment ""
declareVariableWithoutAssignmentNonFinal
	"" Type " " Name ""
declareVariableWithoutAssignmentFinal
	"final " Type " " Name ""
declareStaticVariableWithAssignmentFinal
	"static final " Type " " Name " = " Assignment ""
declareStaticVariableWithAssignmentNonFinal
	"static " Type " " Name " = " Assignment ""
declareStaticVariableWithoutAssignmentNonFinal
	"static " Type " " Name ""
declareStaticVariableWithoutAssignmentFinal
	"static final " Type " " Name ""
declareMember
	"protected " Name And Type " = " Assignment ";"
declareMemberComplete
	"protected " Name And Type and Assignment ";"
declareMemberVariable
	"protected ExternalVariableEntry " Name "Variable = " Member ";"
declareMemberMethod
	"protected ExternalMethodEntry " Name "Method = " Member ";"
declareMemberClass
	"protected " Name " " Name "Class = " Member ""
declareMethod
	"public " IsStatic "" Type " " Name "(" Parameters ") {" Method Body ""
declareClass
	"package " Package name ";
" Import List "
public " IsStatic "" Class Type " " Class Name " " Extends " " Implements " {
	//Externals" Variables "\n" Methods "\n" Classes "
	//Internals" Variables "\n" Methods "\n" Classes "
}"


declareSubClass
	"public " IsStatic "" Class Type " " Class Name " " Extends " " Implements " {
	//Externals" Variables "\n" Methods "\n" Classes "
	//Internals" Variables "\n" Methods "\n" Classes ""