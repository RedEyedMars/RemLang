#Comments
comment-s
	[#[^\n]*\n] as comment 

#Tokens
token-s
	"|" as PIPE
	"+" as PLUS
	"?" as OPTIONAL
	"*" as MANY
	"as" as AS
	"in" as IN
	"with" as WITH
	"are" as ARE
	"," as COMMA
	[[+-]] as ADDITIVE_OPERAND
	[[*/]] as MULTIPLICATIVE_OPERAND
	"has" as HAS
	[is[ \\t]+silent] as SILENCE
	[any[\\t ]+list] as ANYLIST
	[\\t] as TAB
	[\\n] as NEWLINE
	[[a-zA-Z_][a-zA-Z0-9_]*] as NAME
	[[a-zA-Z_][a-zA-Z0-9_]*([ \\t]*[-][ \\t]*([a-zA-Z_][a-zA-Z0-9_]*))?] as LISTNAME
	[[\\t ]+] as SPACES
	[.*] as WILD
	[[-]?\\d+] as NUMBER

#Braces
brace-s are Braced
	[(,)] as BRACE with definition 
	[[,]] as SQUARE with WILD as regex
	[\",\"] as QUOTE with WILD as quote
	[{,}] as PARAM_BRACE with arithmatic as parameter ( COMMA arithmatic as parameter )*

altbrace-s are CharitableBraced
	[,\n] as NEWLINED_DEF with definition

#List Prototypes
list_rule-s are empty
rule-s are empty
rule_parameter-s are empty
definition-s are empty

#Rules
base is silent
	( NEWLINE | comments | rule as rule in rules | list_rule as list_rule in list_rules )+

parameters
	(AS NAME as name )? (IN listnames as list )? 

arithmatic has tabCount, tabLength
	arithmatic ADDITIVE_OPERAND as operand arithmatic{1,2+3}
	arithmatic MULTIPLICATIVE_OPERAND as operand arithmatic
	rule_parameter | NUMBER

rule is silent
	NAME as rulename in rules ( SILENCE as silence )? member_declaration? NEWLINE TAB definition as definition in definitions

member_declaration is silent
	HAS NAME as rule_param in rule_parameters  ( COMMA NAME as rule_param in rule_parameters )*


list_rule is silent		
	LISTNAME as listname in listnames ( ARE NAME as listType )? NEWLINE ( TAB ( ( QUOTE | SQUARE ) parameters ( WITH NEWLINED_DEF as parameter)? ) as list_def NEWLINE )*

definition
	( atom atom* ) as chain ( ( PIPE | NEWLINE TAB ) definition )? as choice

atom
	element parameters PARAM_BRACE?

element	is silent
	( definition ( OPTIONAL | MANY | PLUS ) as option ) as multiple
	BRACE as braced	
	terminal

terminal
	( ANYLIST ) as anyListNameToken	
	( listnames ) as listsToken
	( any list ) as listToken