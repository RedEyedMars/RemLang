#List structure
listnames
	[listnames] as listname
	[rules] as rule
	[tokens] as token
	[rulenames] as rulename
	[rule_parameters] as rule_parameter
	[list_rules] as list_rule
	[braces] as brace
	[altbraces] as altbrace
	[comments] as comment

#Comments
comments
	[#[^\n]*\n] as comment 

#Tokens
tokens
	[[|]] as PIPE
	[[+]] as PLUS
	[[?]] as OPTIONAL
	[[*]] as MANY
	[as] as AS
	[in] as IN
	[with] as WITH
	[are] as ARE
	[[+-]] as ADDITIVE_OPERAND
	[[*/]] as MULTIPLICATIVE_OPERAND
	[[ \\t]+has[ \\t]+] as HAS
	[[ \\t]+is[ \\t]+silent] as SILENCE
	[any[\\t ]+list] as ANYLIST
	[\\t] as TAB
	[\\n] as NEWLINE
	[[a-zA-Z_-][a-zA-Z0-9_-]*] as NAME
	[[\\t ]+] as SPACES
	[.*] as WILD
	[\\d+] as NUMBER

#Braces
braces are Braced
	[(,)] as BRACE with definition
	[[,]] as SQUARE with WILD as regex
	[\",\"] as QUOTE with WILD as regex
	[,;] as SEMICOLON with definition

altbraces are CharitableBraced
	[,\n] as NEWLINED with definition

#List Rules
list_rules are empty

#Rule Parameters
rule_parameters are empty

#Rules
base is silent
	( SPACES? NEWLINE | comments | rule as rule in rules | list_rule as list_rule in list_rules )+

parameters
	(SPACES AS SPACES NAME as name )? (SPACES IN SPACES listnames as list )? (SPACES WITH SPACES ( NEWLINED | SEMICOLON | NUMBER ) as parameter)? SPACES?

arithmatic
	arithmatic ADDITIVE_OPERAND as operand arithmatic
	arithmatic MULTIPLICATIVE_OPERAND as operand arithmatic
	rule_parameter | NUMBER

rule is silent
	NAME as rulename in rules ( SILENCE as silence )? ( HAS NAME as rule_param in rule_parameters )? SPACES? NEWLINE TAB definition


list_rule is silent		
	NAME as listname in listnames ( SPACES ARE SPACES NAME as listType )? SPACES? ( NEWLINE? TAB ( ( QUOTE | SQUARE ) parameters ) as list_def )*

definition
	( atom atom* ) as chain ( SPACES? ( PIPE | NEWLINE TAB ) definition )? as choice

atom
	SPACES? element parameters

element	is silent
	( definition SPACES? ( OPTIONAL | MANY | PLUS ) as option ) as multiple
	BRACE as braced	
	terminal

terminal
	( ANYLIST ) as anyListNameToken	
	( listnames ) as listsToken
	( any list ) as listToken